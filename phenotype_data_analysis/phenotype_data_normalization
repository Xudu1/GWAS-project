-------------------------------
title: "VCF_filtering_and_PCA"
author: "Xu Du"
date: "17/05/2021"
output: html_doccment
---------------------------------

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Two methods "standardization" and "normalization" were used to scale the data for each of the three phenotypes Nec, Pycï¼Œand STB 


```{r}
library(caret)
library(ggplot2)

dat <- read.csv("/Users/daffy/Downloads/GWAS/phenotyped/Nec_phenotype.csv")

## Scaling of the phenotypic data of Nec to a mean of 0 and a standard deviation of 1 based on the standardizaiton method
preproc1 <- preProcess(dat[,c(2:4)], method=c("center", "scale"))

norm1 <- predict(preproc1, dat[,c(2:4)])

summary(norm1)

write.csv(norm1, file ="/Users/daffy/Downloads/GWAS/phenotyped/Nec_phenotype_norm1.csv")



## Plot the data scaling results
p <- read.csv('norm1_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = Nec))
p + geom_histogram()
```



```{r}
## Scaling of the phenotypic data of Nec to the range of 0-1 based on the normalization method
preproc2 <- preProcess(dat[,c(2:4)], method=c("range"))

norm2 <- predict(preproc2, dat[,c(2:4)])

summary(norm2)

write.csv(norm2, file ="/Users/daffy/Downloads/GWAS/phenotype/Nec_phenotype_norm2.csv")

## Plot the data scaling results
p <- read.csv('norm2_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = Nec))
p + geom_histogram()
```

##-----------------------------------------------------------------------------------

```{r}
##Data scaling for phenotype Pyc
dat <- read.csv("/Users/daffy/Downloads/Pyc_phenotype.csv")
preproc1 <- preProcess(dat[,c(2:4)], method=c("center", "scale"))

norm1 <- predict(preproc1, dat[,c(2:4)])

summary(norm1)

write.csv(norm1, file ="/Users/daffy/Downloads/GWAS/phenotype/Pyc_phenotype_norm1.csv")

## Plot the data scaling results
p <- read.csv('norm1_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = Pyc))
p + geom_histogram()
```



```{r}
preproc2 <- preProcess(dat[,c(2:4)], method=c("range"))

norm2 <- predict(preproc2, dat[,c(2:4)])

summary(norm2)

write.csv(norm2, file ="/Users/daffy/Downloads/GWAS/phenotyped/Pyc_phenotyped_norm2.csv")

## Plot the data scaling results
p <- read.csv('norm2_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = Pyc))
p + geom_histogram()
```

##---------------------------------------------------------------------------------

```{r}
##Data scaling for phenotype STB
dat <- read.csv("/Users/daffy/Downloads/STB_phenotype.csv")
preproc1 <- preProcess(dat[,c(2:4)], method=c("center", "scale"))

norm1 <- predict(preproc1, dat[,c(2:4)])

summary(norm1)

norm1 <- log(norm1)

write.csv(norm1, file ="/Users/daffy/Downloads/GWAS/phenotype/STB_phenotype_norm1.csv")

## Plot the data scaling results
p <- read.csv('norm1_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = STB))
p + geom_histogram()
```



```{r}
preproc2 <- preProcess(dat[,c(2:4)], method=c("range"))

norm2 <- predict(preproc2, dat[,c(2:4)])

summary(norm2)

write.csv(norm2, file ="/Users/daffy/Downloads/GWAS/phenotyped/STB_phenotyped_norm2.csv")

## Plot the data scaling results
p <- read.csv('norm2_log.csv',header=T)
df <- as.data.frame(p)

p <- ggplot(data = p,
            mapping = aes(x = STB))
p + geom_histogram()
```
